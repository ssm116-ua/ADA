# Salvador Pardo Saiz 51253936-T
set terminal png
set output "quickSort.png"

set xlabel "size of arrays"
set ylabel "Millions of program steps"

set title  "Quicksort"
set xtics("2¹⁶" 65536,"2¹⁷" 131072,"2¹⁸" 262144,"2¹⁹" 524288, "2²⁰" 1048576)
#"2¹⁵" 32768, 
plot "qs-vs-hs.Msteps" using 1:2 with lines title "random arrays", \
"qs-vs-hs.Msteps" using 1:4 with lines title "sorted arrays", \
"qs-vs-hs.Msteps" using 1:6 with lines title "reverse-sorted arrays"

##########################################################################

set terminal png
set output "heapSort.png"

set xlabel "size of arrays"
set ylabel "Millions of program steps"

set title  "Heapsort"
set xtics("2¹⁶" 65536,"2¹⁷" 131072,"2¹⁸" 262144,"2¹⁹" 524288, "2²⁰" 1048576)
#"2¹⁵" 32768, 
plot "qs-vs-hs.Msteps" using 1:3 with lines title "random arrays", \
"qs-vs-hs.Msteps" using 1:5 with lines title "sorted arrays", \
"qs-vs-hs.Msteps" using 1:7 with lines title "reverse-sorted arrays"

##########################################################################

set terminal png
set output "qs-vs-hs-RA.png"

set xlabel "size of arrays"
set ylabel "Millions of program steps"

set title  "Quicksort versus HeapSort (random arrays)"
set xtics("2¹⁶" 65536,"2¹⁷" 131072,"2¹⁸" 262144,"2¹⁹" 524288, "2²⁰" 1048576)

quickSortFit(x) = (a*x*log(x) + b)
heapSortFit(x) = (c*x*log(x) + d)

#------------------------------------------------------------------------
#Fit to a (n log n ) function: 
fit quickSortFit(x) "qs-vs-hs.Msteps" using 1:2 via a,b
fit heapSortFit(x) "qs-vs-hs.Msteps" using 1:3 via c,d
#------------------------------------------------------------------------

plot "qs-vs-hs.Msteps" using 1:2 with lines title "Quicksort", \
"qs-vs-hs.Msteps" using 1:3 with lines title "Heapsort", \
quickSortFit(x) title "fitting Quicksort time values to ...", \
heapSortFit(x) title "fitting Quicksort time values to ..."



##########################################################################

set terminal png
set output "qs-vs-hs-SA.png"

set xlabel "size of arrays"
set ylabel "Millions of program steps"

set title  "Quicksort versus HeapSort (sorted arrays)"
set xtics("2¹⁶" 65536,"2¹⁷" 131072,"2¹⁸" 262144,"2¹⁹" 524288, "2²⁰" 1048576)

quickSortFit(x) = (a*x*log(x) + b)
heapSortFit(x) = (c*x*log(x) + d)

#------------------------------------------------------------------------
#Fit to a (n log n ) function: 
fit quickSortFit(x) "qs-vs-hs.Msteps" using 1:4 via a,b
fit heapSortFit(x) "qs-vs-hs.Msteps" using 1:5 via c,d
#------------------------------------------------------------------------

plot "qs-vs-hs.Msteps" using 1:4 with lines title "Quicksort", \
"qs-vs-hs.Msteps" using 1:5 with lines title "Heapsort", \
quickSortFit(x) title "fitting Quicksort time values to ...", \
heapSortFit(x) title "fitting Quicksort time values to ..."



##########################################################################

set terminal png
set output "qs-vs-hs-RSA.png"

set xlabel "size of arrays"
set ylabel "Millions of program steps"

set title  "Quicksort versus HeapSort (reverse-sorted arrays)"
set xtics("2¹⁶" 65536,"2¹⁷" 131072,"2¹⁸" 262144,"2¹⁹" 524288, "2²⁰" 1048576)

quickSortFit(x) = (a*x*log(x) + b)
heapSortFit(x) = (c*x*log(x) + d)

#------------------------------------------------------------------------
#Fit to a (n log n ) function: 
fit quickSortFit(x) "qs-vs-hs.Msteps" using 1:6 via a,b
fit heapSortFit(x) "qs-vs-hs.Msteps" using 1:7 via c,d
#------------------------------------------------------------------------

plot "qs-vs-hs.Msteps" using 1:6 with lines title "Quicksort", \
"qs-vs-hs.Msteps" using 1:7 with lines title "Heapsort", \
quickSortFit(x) title "fitting Quicksort time values to ...", \
heapSortFit(x) title "fitting Quicksort time values to ..."



##########################################################################